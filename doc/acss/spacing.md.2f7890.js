(window.webpackJsonp=window.webpackJsonp||[]).push([[118],{1488:function(n,s){n.exports={content:["article",["p","AD UI 规范了间距的数字必须被 4 整除，默认的配置中包含了 -500 ~ 500 内的数字。"],["p","相关 CSS 属性：",["code","margin"]," ",["code","padding"]," ",["code","width"]," ",["code","height"]," 及这四个属性的子属性"],["hr"],["p","完整的 ",["code","spacing"]," 配置："],["pre",{lang:"javascript",highlighted:'<span class="token keyword">const</span> spacing <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> index <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> index <span class="token operator">&lt;=</span> <span class="token number">500</span><span class="token punctuation">;</span> index <span class="token operator">+</span><span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  spacing<span class="token punctuation">[</span>index<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token template-string"><span class="token string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>index<span class="token interpolation-punctuation punctuation">}</span></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>index <span class="token operator">===</span> <span class="token number">0</span> <span class="token operator">?</span> <span class="token string">""</span> <span class="token punctuation">:</span> <span class="token string">"px"</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">`</span></span>\n<span class="token punctuation">}</span>\n\n<span class="token comment" spellcheck="true">// tailwind.config.js</span>\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span> theme<span class="token punctuation">:</span> <span class="token punctuation">{</span> spacing <span class="token punctuation">}</span> <span class="token punctuation">}</span>'},["code",'const spacing = {}\nfor (let index = 0; index <= 500; index += 4) {\n  spacing[index] = `${index}${index === 0 ? "" : "px"}`\n}\n\n// tailwind.config.js\nmodule.exports = { theme: { spacing } }']],["pre",{lang:"jsx acss",highlighted:'<span class="token keyword">const</span> spacing <span class="token operator">=</span> {}\n<span class="token keyword">for</span> <span class="token punctuation">(</span>let index <span class="token operator">=</span> <span class="token number">0</span><span class="token comment" spellcheck="true">; index &lt;= 200; index += 4) {</span>\n  spacing<span class="token punctuation">[</span>index<span class="token punctuation">]</span> <span class="token operator">=</span> `${index}${index <span class="token operator">==</span><span class="token operator">=</span> <span class="token number">0</span> <span class="token operator">?</span> <span class="token string">""</span> <span class="token punctuation">:</span> <span class="token string">"px"</span>}`\n}\n\nreturn <span class="token punctuation">(</span>\n  <span class="token operator">&lt;</span>Table\n    className<span class="token operator">=</span><span class="token string">"w-full"</span>\n    dataSource<span class="token operator">=</span>{Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>spacing<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span>o<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span>{\n      value<span class="token punctuation">:</span> o<span class="token punctuation">,</span>\n    }<span class="token punctuation">)</span><span class="token punctuation">)</span>}\n    columns<span class="token operator">=</span>{<span class="token punctuation">[</span>\n      {\n        dataIndex<span class="token punctuation">:</span> <span class="token string">"class"</span><span class="token punctuation">,</span>\n        title<span class="token punctuation">:</span> <span class="token string">"类名"</span><span class="token punctuation">,</span>\n        width<span class="token punctuation">:</span> <span class="token number">200</span><span class="token punctuation">,</span>\n        render<span class="token punctuation">:</span> <span class="token punctuation">(</span>{ value }<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> `w<span class="token operator">-</span>${value}`<span class="token punctuation">,</span>\n      }<span class="token punctuation">,</span>\n      {\n        dataIndex<span class="token punctuation">:</span> <span class="token string">"value"</span><span class="token punctuation">,</span>\n        title<span class="token punctuation">:</span> <span class="token string">"值"</span><span class="token punctuation">,</span>\n        width<span class="token punctuation">:</span> <span class="token number">200</span><span class="token punctuation">,</span>\n        render<span class="token punctuation">:</span> <span class="token punctuation">(</span>{ value }<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> `${value}px`<span class="token punctuation">,</span>\n      }<span class="token punctuation">,</span>\n      {\n        dataIndex<span class="token punctuation">:</span> <span class="token string">"length"</span><span class="token punctuation">,</span>\n        title<span class="token punctuation">:</span> <span class="token string">""</span><span class="token punctuation">,</span>\n        render<span class="token punctuation">:</span> <span class="token punctuation">(</span>{ value }<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span>\n          <span class="token operator">&lt;</span>div className<span class="token operator">=</span>{`h<span class="token operator">-</span><span class="token number">20</span> bg<span class="token operator">-</span>tp<span class="token operator">-</span>gray<span class="token operator">-</span><span class="token number">300</span> rounded<span class="token operator">-</span><span class="token number">6</span> w<span class="token operator">-</span>${value}`} <span class="token operator">/</span><span class="token operator">></span>\n        <span class="token punctuation">)</span><span class="token punctuation">,</span>\n      }<span class="token punctuation">,</span>\n    <span class="token punctuation">]</span>}\n  <span class="token operator">/</span><span class="token operator">></span>\n<span class="token punctuation">)</span>'},["code",'const spacing = {}\nfor (let index = 0; index <= 200; index += 4) {\n  spacing[index] = `${index}${index === 0 ? "" : "px"}`\n}\n\nreturn (\n  <Table\n    className="w-full"\n    dataSource={Object.keys(spacing).map((o) => ({\n      value: o,\n    }))}\n    columns={[\n      {\n        dataIndex: "class",\n        title: "类名",\n        width: 200,\n        render: ({ value }) => `w-${value}`,\n      },\n      {\n        dataIndex: "value",\n        title: "值",\n        width: 200,\n        render: ({ value }) => `${value}px`,\n      },\n      {\n        dataIndex: "length",\n        title: "",\n        render: ({ value }) => (\n          <div className={`h-20 bg-tp-gray-300 rounded-6 w-${value}`} />\n        ),\n      },\n    ]}\n  />\n)']]],meta:{title:"间距 Spacing",filename:"doc/acss/spacing.md"}}}}]);