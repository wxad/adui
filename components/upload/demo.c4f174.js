(window.webpackJsonp=window.webpackJsonp||[]).push([[68],{1438:function(n,s,a){n.exports={file:a(1579),img:a(1580)}},1579:function(n,s){n.exports={content:["article",["p","简单地模拟 ",["code","Upload.File"]," 所支持的 Props"],["pre",{lang:"jsx",highlighted:'<span class="token keyword">const</span> str <span class="token operator">=</span> <span class="token string">"文件名称.pdf"</span>\n<span class="token keyword">const</span> link <span class="token operator">=</span> <span class="token string">"http://wxa.wxs.qq.com/wxadtouch/upload/t2/h7bax687_f41d8744.pdf"</span>\n\n<span class="token keyword">const</span> <span class="token punctuation">[</span>progress<span class="token punctuation">,</span> setProgress<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> <span class="token punctuation">[</span>src<span class="token punctuation">,</span> setSrc<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span>link<span class="token punctuation">)</span>\n<span class="token keyword">const</span> <span class="token punctuation">[</span>name<span class="token punctuation">,</span> setName<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span>\n<span class="token keyword">const</span> upload <span class="token operator">=</span> <span class="token function">useRef</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span>\n\n<span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>upload<span class="token operator">?</span><span class="token punctuation">.</span>current<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>upload<span class="token punctuation">.</span>current<span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>\n\n<span class="token keyword">const</span> handleUpload <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> x <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">"INPUT"</span><span class="token punctuation">)</span>\n  x<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">"type"</span><span class="token punctuation">,</span> <span class="token string">"file"</span><span class="token punctuation">)</span>\n  x<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">"accept"</span><span class="token punctuation">,</span> <span class="token string">"application/pdf"</span><span class="token punctuation">)</span>\n  x<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">"change"</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n    <span class="token function">setName</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span>\n\n    <span class="token comment" spellcheck="true">// 模拟进度</span>\n    <span class="token function">setProgress</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>\n    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n      <span class="token function">setProgress</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">)</span>\n    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n      <span class="token function">setProgress</span><span class="token punctuation">(</span><span class="token number">80</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">500</span><span class="token punctuation">)</span>\n    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n      <span class="token function">setProgress</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span>\n    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n      <span class="token function">setProgress</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span>\n      <span class="token function">setSrc</span><span class="token punctuation">(</span>link<span class="token punctuation">)</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1300</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  x<span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">return</span> <span class="token punctuation">(</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>w-240<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>handleUpload<span class="token punctuation">}</span></span><span class="token punctuation">></span></span><span class="token punctuation">{</span>name <span class="token operator">?</span> <span class="token string">"替换"</span> <span class="token punctuation">:</span> <span class="token string">"上传"</span><span class="token punctuation">}</span> pdf<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>py-12</span> <span class="token attr-name">text-12</span> <span class="token attr-name">leading-18</span> <span class="token attr-name">text-tp-gray-700"</span><span class="token punctuation">></span></span>\n      支持格式：<span class="token punctuation">.</span>pdf\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Upload.File</span>\n      <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>w-240<span class="token punctuation">"</span></span>\n      <span class="token attr-name">ref</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>upload<span class="token punctuation">}</span></span>\n      <span class="token attr-name">progress</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>progress<span class="token punctuation">}</span></span>\n      <span class="token attr-name">src</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>src<span class="token punctuation">}</span></span>\n      <span class="token attr-name">onIconClick</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n        <span class="token function">setName</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span>\n        <span class="token function">setSrc</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span>\n      <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n      <span class="token attr-name">onUpload</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>handleUpload<span class="token punctuation">}</span></span>\n      <span class="token attr-name">name</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>name<span class="token punctuation">}</span></span>\n    <span class="token punctuation">/></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n<span class="token punctuation">)</span>'},["code",'const str = "文件名称.pdf"\nconst link = "http://wxa.wxs.qq.com/wxadtouch/upload/t2/h7bax687_f41d8744.pdf"\n\nconst [progress, setProgress] = useState(null)\nconst [src, setSrc] = useState(link)\nconst [name, setName] = useState(str)\nconst upload = useRef(null)\n\nuseEffect(() => {\n  if (upload?.current) {\n    console.log(upload.current)\n  }\n}, [])\n\nconst handleUpload = () => {\n  const x = document.createElement("INPUT")\n  x.setAttribute("type", "file")\n  x.setAttribute("accept", "application/pdf")\n  x.addEventListener("change", () => {\n    setName(str)\n\n    // 模拟进度\n    setProgress(0)\n    setTimeout(() => {\n      setProgress(20)\n    }, 200)\n    setTimeout(() => {\n      setProgress(80)\n    }, 500)\n    setTimeout(() => {\n      setProgress(100)\n    }, 1000)\n    setTimeout(() => {\n      setProgress(null)\n      setSrc(link)\n    }, 1300)\n  })\n  x.click()\n}\n\nreturn (\n  <div className="w-240">\n    <Button onClick={handleUpload}>{name ? "替换" : "上传"} pdf</Button>\n    <div className="py-12 text-12 leading-18 text-tp-gray-700">\n      支持格式：.pdf\n    </div>\n    <Upload.File\n      className="w-240"\n      ref={upload}\n      progress={progress}\n      src={src}\n      onIconClick={() => {\n        setName("")\n        setSrc("")\n      }}\n      onUpload={handleUpload}\n      name={name}\n    />\n  </div>\n)']]],meta:{order:1,title:{"zh-CN":"示例","en-US":"File"},filename:"components/upload/demo/file.md"}}},1580:function(n,s){n.exports={content:["article",["p","简单地模拟 ",["code","Upload.Img"]," 所支持的 Props"],["pre",{lang:"jsx",highlighted:'<span class="token keyword">const</span> link <span class="token operator">=</span> <span class="token string">"http://wxa.wxs.qq.com/images/preview/img-placeholder_320x180.png"</span>\n\n<span class="token keyword">const</span> <span class="token punctuation">[</span>progress<span class="token punctuation">,</span> setProgress<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> <span class="token punctuation">[</span>src<span class="token punctuation">,</span> setSrc<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span>link<span class="token punctuation">)</span>\n<span class="token keyword">const</span> upload <span class="token operator">=</span> <span class="token function">useRef</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span>\n\n<span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>upload<span class="token punctuation">.</span>current<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> <span class="token punctuation">{</span> uploadElement <span class="token punctuation">}</span> <span class="token operator">=</span> upload<span class="token punctuation">.</span>current\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>uploadElement<span class="token punctuation">)</span>\n    uploadElement<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">"click"</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"click"</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>\n\n<span class="token keyword">const</span> handleUpload <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> x <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">"INPUT"</span><span class="token punctuation">)</span>\n  x<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">"type"</span><span class="token punctuation">,</span> <span class="token string">"file"</span><span class="token punctuation">)</span>\n  x<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">"accept"</span><span class="token punctuation">,</span> <span class="token string">"image/x-png,image/gif,image/jpeg"</span><span class="token punctuation">)</span>\n  x<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">"change"</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n    <span class="token comment" spellcheck="true">// 模拟进度</span>\n    <span class="token function">setProgress</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>\n    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n      <span class="token function">setProgress</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">)</span>\n    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n      <span class="token function">setProgress</span><span class="token punctuation">(</span><span class="token number">80</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">500</span><span class="token punctuation">)</span>\n    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n      <span class="token function">setProgress</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span>\n    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n      <span class="token function">setProgress</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span>\n      <span class="token function">setSrc</span><span class="token punctuation">(</span>link<span class="token punctuation">)</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1300</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  x<span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">return</span> <span class="token punctuation">(</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Upload.Img</span>\n    <span class="token attr-name">ref</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>upload<span class="token punctuation">}</span></span>\n    <span class="token attr-name">progress</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>progress<span class="token punctuation">}</span></span>\n    <span class="token attr-name">src</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>src<span class="token punctuation">}</span></span>\n    <span class="token attr-name">onIconClick</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n      e<span class="token punctuation">.</span><span class="token function">stopPropagation</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n      <span class="token function">setSrc</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n    <span class="token attr-name">previewDisabled</span>\n    <span class="token attr-name">onUpload</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>handleUpload<span class="token punctuation">}</span></span>\n    <span class="token attr-name">icon</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>replace<span class="token punctuation">"</span></span>\n    <span class="token attr-name">hoverOperations</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        text<span class="token punctuation">:</span> <span class="token string">"更改"</span><span class="token punctuation">,</span>\n        onClick<span class="token punctuation">:</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n          e<span class="token punctuation">.</span><span class="token function">stopPropagation</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n          <span class="token function">setSrc</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span>\n          <span class="token function">handleUpload</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span></span><span class="token attr-name">,</span>\n      <span class="token attr-name">{</span>\n        <span class="token attr-name"><span class="token namespace">text:</span></span> <span class="token attr-name">"删除",</span>\n        <span class="token attr-name"><span class="token namespace">onClick:</span></span> <span class="token attr-name">(e)</span> <span class="token attr-name">=</span><span class="token punctuation">></span> <span class="token attr-name">{</span>\n          <span class="token attr-name">e.stopPropagation()</span>\n          <span class="token attr-name">setSrc("")</span>\n        <span class="token attr-name">},</span>\n      <span class="token attr-name">},</span>\n    <span class="token attr-name">]}</span>\n  <span class="token punctuation">/></span></span>\n<span class="token punctuation">)</span>'},["code",'const link = "http://wxa.wxs.qq.com/images/preview/img-placeholder_320x180.png"\n\nconst [progress, setProgress] = useState(null)\nconst [src, setSrc] = useState(link)\nconst upload = useRef(null)\n\nuseEffect(() => {\n  if (upload.current) {\n    const { uploadElement } = upload.current\n    console.log(uploadElement)\n    uploadElement.addEventListener("click", () => {\n      console.log("click")\n    })\n  }\n}, [])\n\nconst handleUpload = () => {\n  const x = document.createElement("INPUT")\n  x.setAttribute("type", "file")\n  x.setAttribute("accept", "image/x-png,image/gif,image/jpeg")\n  x.addEventListener("change", () => {\n    // 模拟进度\n    setProgress(0)\n    setTimeout(() => {\n      setProgress(20)\n    }, 200)\n    setTimeout(() => {\n      setProgress(80)\n    }, 500)\n    setTimeout(() => {\n      setProgress(100)\n    }, 1000)\n    setTimeout(() => {\n      setProgress(null)\n      setSrc(link)\n    }, 1300)\n  })\n  x.click()\n}\n\nreturn (\n  <Upload.Img\n    ref={upload}\n    progress={progress}\n    src={src}\n    onIconClick={(e) => {\n      e.stopPropagation()\n      setSrc("")\n    }}\n    previewDisabled\n    onUpload={handleUpload}\n    icon="replace"\n    hoverOperations={[\n      {\n        text: "更改",\n        onClick: (e) => {\n          e.stopPropagation()\n          setSrc("")\n          handleUpload()\n        },\n      },\n      {\n        text: "删除",\n        onClick: (e) => {\n          e.stopPropagation()\n          setSrc("")\n        },\n      },\n    ]}\n  />\n)']]],meta:{order:0,title:{"zh-CN":"示例","en-US":"Img"},filename:"components/upload/demo/img.md"}}}}]);